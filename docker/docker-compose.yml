services:
  ppt_web:
    build:
      context: ..
      dockerfile: docker/web/Dockerfile
      args:
        - DOCKER_ENV=development
    expose:
      - "5173:5173"
    depends_on:
      - ppt_api
    networks:
      - ppt-net
    environment:
      - VITE_API_BASE_URL=/api
      - TZ=Asia/Shanghai
    volumes:
      - ../apps/web/src:/app/src
      - ../apps/web/public:/app/public
      - ../apps/web/index.html:/app/index.html
      - ../apps/web/vite.config.ts:/app/vite.config.ts

  ppt_api:
    build:
      context: ..
      dockerfile: docker/api/Dockerfile
    volumes:
      - ../workspace:/app/workspace
      - ../apps/api:/app/apps/api
      - ../core:/app/core
      - ../config:/app/config
    command: uvicorn apps.api.main:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "8000:8000"
    environment:
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
      - TZ=Asia/Shanghai
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/app
      - WORKING_DIR=/app/workspace
    depends_on:
      - redis
    networks:
      - ppt-net
    env_file:
      - ../.env
    tty: true
    stdin_open: true

  ppt_celery_worker:
    build:
      context: ..
      dockerfile: docker/celery/Dockerfile
    volumes:
      - ../workspace:/app/workspace
      - ../apps/api:/app/apps/api
      - ../core:/app/core
      - ../config:/app/config
    command: celery -A apps.api.celery_app worker --loglevel=INFO --concurrency=2 -Q ppt_generation,template_analysis
    environment:
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
      - TZ=Asia/Shanghai
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/app
      - WORKING_DIR=/app/workspace
    depends_on:
      - redis
      - ppt_api
    networks:
      - ppt-net
    env_file:
      - ../.env
    tty: true
    stdin_open: true

  ppt_mlflow:
    image: python:3.10-slim
    working_dir: /app
    volumes:
      - ../workspace/mlflow:/app/mlruns
    ports:
      - "5001:5001"
    networks:
      - ppt-net
    command: >
      sh -c "pip install mlflow &&
             mlflow server --host 0.0.0.0 --port 5001 --backend-store-uri file:///app/mlruns --default-artifact-root file:///app/mlruns"
    environment:
      - TZ=Asia/Shanghai

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - ../workspace/redis:/data
    networks:
      - ppt-net
    environment:
      - TZ=Asia/Shanghai
    command: redis-server --appendonly yes --appendfsync everysec

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ../docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - ppt_web
      - ppt_api
    networks:
      - ppt-net
    environment:
      - TZ=Asia/Shanghai

networks:
  ppt-net:
    driver: bridge 