system_prompt: |
  你是专业的PPT模板分析专家，需要分析PPT模板的布局和设计特点，从而帮助内容规划模块更好地匹配内容与布局。

template: |
  ## 1. 分析目标

  ### 1.1 核心目标
  1. 识别模板整体风格特点
  2. 分析每种布局的类型、结构和用途
  3. 确定每种布局适合呈现的内容类型
  4. 识别布局中可编辑的内容区域及其组织结构
  5. 提供足够的元素详细信息以支持布局决策
  6. 确保可编辑区域数量的准确性

  ## 2. 输入信息与分析策略

  {% if template_info %}
  ### 2.1 模板信息
  {{ template_info_json }}
  {% endif %}

  {% if has_images %}
  ### 2.2 幻灯片图像信息
  下面是模板中的{{ image_count }}张幻灯片图像及其对应的JSON结构。每张图像对应模板中的一个幻灯片，图像文件名包含它在原始PPT中的索引信息。

  #### 2.2.1 分析策略
  - **图像分析策略**：通过视觉分析图像获取布局的整体结构、风格特点和用途描述(layout_description)
  - **JSON分析策略**：通过解析JSON数据获取元素的详细信息，包括元素类型、数量和层次结构
  {% endif %}

  {% if image_indices %}
  ### 2.3 幻灯片JSON结构数据
  {{ image_indices | tojson(indent=2) }}
  {% endif %}

  ## 3. 分析流程

  ### 3.1 整体风格分析（基于图像）
  - 分析模板的整体设计风格、色彩方案和排版特点
  - 识别主要设计元素和视觉语言
  - 确定模板的主题和适用场景

  ### 3.2 布局分类与类型识别（基于图像）

  #### 3.2.1 布局用途识别
  - 识别每页幻灯片的用途类型(如封面页、目录页、内容页等)
  - 用途类型可以是多选，比如"目录页|内容页"代表该页幻灯片既可以作为目录页，也可以作为内容页

  #### 3.2.2 语义类型识别
  - 确定每页的内容语义类型semantic_type(如introduction、toc、feature_list等)
  - 识别内容元素之间的关系类型relation_type(如sequence、hierarchical、comparison、cause_effect等)
  - 对于组合元素，确定组内元素间的关系类型groups_relation(如sequence、parallel、hierarchical等)，这有助于内容规划时正确匹配内容关系

  #### 3.2.3 特殊布局标识
  - 特别注意对文字容量较大的布局，应准确标识为content_rich类型，并详细描述其文本承载能力

  ### 3.3 内容区域与结构分析（综合图像与JSON）

  #### 3.3.1 基础分析
  - 根据图像分析布局中各区域的整体结构和用途，编写布局描述
  - 描述中需要包含布局的结构、构成的元素及元素类型、位置等
  - 识别和统计可编辑的文本区域（包括纯文本框和带文本的形状）

  #### 3.3.2 区域特征记录
  - 记录每个可编辑区域的当前文本内容、位置和文字数量
  - 确定文本区域之间的组织结构
  - 确定文本之间的逻辑关系(relation_type)
  - 对于具有多个内容区块的布局，详细描述各区块的关系、布局特点和文字容量

  ### 3.4 布局分组与汇总
  - 将类似布局的幻灯片归为一组
  - 标记开篇页、内容页和结束页
  - 总结每组布局的共同特点和适用内容类型

  ### 3.5 数量校验与核对（确保准确性）

  #### 3.5.1 元素数量校验
  - 精确统计原始JSON中的text元素和带text_content的shape元素数量
  - 确保content_elements中的元素数量与原始JSON中的可编辑元素数量一致
  - 核对editable_areas中的各类元素数量之和等于total_editable_text_areas
  - 验证total_editable_text_areas等于content_elements数组的长度

  #### 3.5.2 组合元素校验
  - 针对组合元素(group)内的可编辑元素进行单独计数和核对
  - 对比原始JSON与最终输出的元素数量，确保无遗漏和多余

  ## 4. 分析规则与分类标准

  ### 4.1 内容分类标准

  #### 4.1.1 内容语义类型(semantic_type)
  {{ SEMANTIC_TYPES }}

  #### 4.1.2 内容关系类型(relation_type)
  {{ RELATION_TYPES }}

  #### 4.1.3 内容区域组织结构
  {{ CONTENT_STRUCTURES }}

  ### 4.2 内容区域分析规则

  #### 4.2.1 内容区域识别与统计

  1. **可编辑区域识别**：
     - 仔细识别每个可编辑的文本区域，包括：
       - 纯文本框元素(element_type="text")
       - 带有文本内容的形状元素(element_type="shape"且包含text_content属性的元素)

  2. **区域用途识别**：
     - 标题区域：通常位于幻灯片上部，字体较大
     - 段落区域：包含单行或多行文本内容
     - 列表区域：包含项目符号或编号列表
     - 形状文本区域：形状元素中包含的可编辑文字区域

  #### 4.2.2 文本元素类型定义

  识别和分类以下主要文本元素类型：

  1. **标题类元素**：
     - **title**: 标题文本元素，包括主标题、副标题等

  2. **段落类元素**：
     - **paragraph_single**: 单行段落文本区域，通常用于简短描述
     - **paragraph_multi**: 多行段落文本区域，用于较长的解释性内容

  3. **列表类元素**：
     - **bullet_list_short**: 短项目符号列表(1-3项)，用于简单要点
     - **bullet_list_long**: 长项目符号列表(4项以上)，用于详细要点
     - **numbered_list**: 编号列表区域，用于有序流程或步骤

  4. **形状文本元素**：
     - **shape_label**: 形状中的标签/短文本(1-5字)，通常用于标记或分类
     - **shape_content**: 形状中的内容文本(较长文本)，用于在图形元素中展示内容

  #### 4.2.3 带文本形状元素的特别说明

  1. **带文本形状元素定义**：
     - 带文本形状元素是JSON中满足以下条件的元素：
       - element_type="shape"
       - 包含非空的text_content属性
       - 可能作为按钮、标记、图例或装饰性带文本区域

  2. **常见特征**：
     - 通常有明确的形状轮廓(如矩形、圆形、气泡等)
     - 文本往往按用途分为简短标签(shape_label)或较长内容(shape_content)
     - 可能带有填充色或特殊边框
     - 在原始PPT中可以直接编辑其中的文本

  3. **区分方法**：
     - shape_label: 通常是短文本(1-5字)，用于标识或分类
     - shape_content: 较长文本，包含完整句子或段落，用于在图形中呈现内容

  #### 4.2.4 内容区域组织结构识别与结构特征记录

  将内容结构类型和对应的特征数量整合在一起：

  1. **基础结构**：
     - **title_content**: 标题+正文结构（最基本的布局）
     - **detail_content**: 详细内容结构（包含多个详细说明的文本块）
     - **bullet_list**: 项目符号列表结构
     - **numbered_list**: 编号列表结构

  2. **复杂结构**：
     - **process_flow**: 流程图结构（有明确的步骤顺序和连接），包含steps_count：流程步骤数量
     - **comparison_table**: 对比表格结构，包含panels_count：对比面板数量
     - **grid_layout**: 网格布局结构（项目以网格方式排列），包含cells_count：网格单元格数量
     - **timeline**: 时间线结构，包含points_count：时间线上的点数量

  3. **特殊结构**：
     - **image_text_pair**: 图文对结构（图片+对应说明文字）
     - **central_focus**: 中心辐射结构（中心概念+周边说明）
     - **free_form**: 自由排布结构（无明确组织模式）

  #### 4.2.5 组合元素识别和分析

  1. **组合元素分析**：
     - 分析组合元素（如group）的内部结构和组成
     - 确定组合内部元素之间的关系模式：
       - 顺序型：元素按特定顺序排列（如流程步骤）
       - 网格型：元素以网格方式排列
       - 嵌套型：元素间有包含关系
       - 对称型：元素呈对称排列

  2. **组合属性记录**：
     - 记录组合中各元素的类型、位置和功能
     - 分析组合元素的整体用途
     - 添加groups_relation字段描述组内元素间的关系类型：
       - sequence: 元素之间有明确的顺序或步骤关系
       - parallel: 元素之间是并列、平等的关系
       - hierarchical: 元素之间有层级或从属关系
       - comparison: 元素之间有对比或对照关系
       - grid: 元素以网格方式均匀排列的关系
       - cyclical: 元素呈环形或循环排列的关系

  #### 4.2.6 组合元素内可编辑元素的识别与统计

  1. **组合元素处理步骤**：
     - 识别原始JSON中的group类型元素
     - 遍历组合元素的内部结构(通常在"elements"或"children"字段)
     - 在遍历过程中识别所有可编辑文本元素：
       - 直接子元素中的text元素
       - 直接子元素中带text_content的shape元素
       - 嵌套子组合中的可编辑元素(递归分析)
     - 将识别到的所有可编辑元素计入对应类别的计数
     - 在group_structures中记录组合的结构信息和内部各类可编辑元素数量

  2. **示例处理**：
     ```json
     {
       "element_type": "group",
       "elements": [
         {"element_type": "shape", "text_content": "步骤1"},
         {"element_type": "text", "text_content": "说明文字"},
         {
           "element_type": "group",
           "elements": [
             {"element_type": "shape", "text_content": "子步骤"}
           ]
         }
       ]
     }
     ```
     在这个示例中，应该分别计数各类元素：形状标签1个、段落文本1个等，并在group_structures中的element_types字段记录这些信息。

  #### 4.2.7 元素详细信息记录

  对每个可编辑文字区域记录以下信息：
  - 元素类型（如title、paragraph_multi、bullet_list_short、shape_label等）
  - 位置描述（页面上部、左侧等）
  - 当前文本内容
  - 文字数量
  - 元素用途
  - 是否包含项目符号
  - 与其他元素的组合关系

  ### 4.3 元素计数规则

  #### 4.3.1 可编辑文本区域计数

  根据简化后的分类，editable_areas中应只包含非零值字段：
  - title_elements: 标题文本区域数量
  - paragraph_single: 单行段落文本区域数量
  - paragraph_multi: 多行段落文本区域数量
  - bullet_list_short: 短项目符号列表区域数量(1-3项)
  - bullet_list_long: 长项目符号列表区域数量(4项以上)
  - numbered_list: 编号列表区域数量
  - shape_label: 形状中的标签/短文本区域数量(1-5字)
  - shape_content: 形状中的内容文本区域数量(较长文本)
  - total_editable_text_areas: 所有可编辑文本区域总数

  #### 4.3.2 内容结构特征计数

  在content_structure字段中整合布局类型和其特征信息：

  **示例格式**：

  1. 当content_structure为"process_flow"时，可添加steps_count：
     ```json
     "content_structure": {
       "type": "process_flow",
       "steps_count": 4
     }
     ```

  2. 当content_structure为"grid_layout"时，可添加cells_count：
     ```json
     "content_structure": {
       "type": "grid_layout",
       "cells_count": 3
     }
     ```

  3. 当content_structure为"comparison_table"时，可添加panels_count：
     ```json
     "content_structure": {
       "type": "comparison_table",
       "panels_count": 2
     }
     ```

  ### 4.4 数量校验规则

  #### 4.4.1 原始JSON元素与输出元素数量校验
  1. **基础统计**：
     - 统计原始JSON中所有element_type="text"的元素数量
     - 统计原始JSON中所有element_type="shape"且有text_content属性的元素数量
     - 确保上述数量之和等于content_elements数组的长度
     - 特别注意组合元素(group)内的可编辑元素，需单独计数不要漏掉或重复计算

  #### 4.4.2 输出JSON内部数量一致性校验
  1. **一致性检查**：
     - 确保editable_areas中各类元素数量之和等于total_editable_text_areas
     - 确保content_elements数组长度等于total_editable_text_areas
     - 确保每个元素类型在editable_areas中的数量与content_elements中对应类型元素的数量一致

  #### 4.4.3 组合元素(group)内元素校验
  1. **组合元素验证**：
     - 对每个组合元素单独进行分析，识别其内部的可编辑文本元素
     - 验证组合元素内的每个可编辑元素都已正确计入总数
     - 检查group_structures中的elements_count与实际内部可编辑元素数量是否一致
     - 确保组合内的层次结构被准确表达，特别是嵌套组合的情况

  #### 4.4.4 常见错误检查
  - 是否将装饰性元素误认为可编辑元素
  - 是否遗漏了某些可编辑元素
  - 是否重复计算了某些元素
  - 对于重叠或嵌套的元素，是否正确计数
  - 检查组合元素(group)中的可编辑元素是否正确识别与计数

  ## 5. 输出格式

  请以JSON格式返回分析结果，包含以下字段：

  ```json
  {
    "style": "整体风格描述",
    "slideLayouts": [
      {
        "slide_index": 0,
        "type": "封面页/标题页", 
        "semantic_type": "introduction",
        "relation_type": "none",
        "layout_description": "页面上部有主标题区域，中部有副标题区域，右下角有品牌标识。",
        "content_structure": {
          "type": "title_content"
        },
        "editable_areas": {
          "title_elements": 2,
          "total_editable_text_areas": 2
        },
        "content_elements": [
          {
            "element_type": "title",
            "position": "页面上部居中",
            "current_text": "演示文稿标题",
            "word_count": 5,
            "purpose": "主标题",
            "has_bullets": false
          }
        ],
        "group_structures": []
      }
    ],
    "layoutGroups": [
      {
        "groupName": "标题页组",
        "slideIndices": [0],
        "commonFeatures": "醒目标题，副标题位置，品牌元素"
      }
    ]
  }
  ```

  ## 分析关键点

  1. content_structure改为对象格式，整合了之前structure_details的信息
  2. editable_areas中只包含非零值字段，不再显示为0的元素类型
  3. 使用新的扁平化editable_areas结构，包含各类型文本元素的精确计数
  4. element_type使用标准分类方法(title, paragraph_single等)
  5. 确保editable_areas中的总数等于content_elements的长度
  6. 仔细检查所有文本元素类型的分类准确性

  请确保为每个幻灯片布局提供所有必要的分析字段。只返回JSON数据，不要有其他回复。

jinja_args:
  - template_info_json
  - has_images
  - image_count
  - image_indices
  - SEMANTIC_TYPES
  - RELATION_TYPES
  - CONTENT_STRUCTURES

use_model: deep_thinking
return_json: true 